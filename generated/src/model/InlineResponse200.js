/**
 * wiki-quiz-api-spec
 * [QuizWiki](https://www.quiz-wiki.com/)のバックエンドです。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse200Topic from './InlineResponse200Topic';

/**
 * The InlineResponse200 model module.
 * @module model/InlineResponse200
 * @version 1.0.0
 */
class InlineResponse200 {
    /**
     * Constructs a new <code>InlineResponse200</code>.
     * @alias module:model/InlineResponse200
     */
    constructor() { 
        
        InlineResponse200.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200} obj Optional instance to populate.
     * @return {module:model/InlineResponse200} The populated <code>InlineResponse200</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('topic')) {
                obj['topic'] = InlineResponse200Topic.constructFromObject(data['topic']);
            }
            if (data.hasOwnProperty('contents')) {
                obj['contents'] = ApiClient.convertToType(data['contents'], [InlineResponse200Topic]);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('words')) {
                obj['words'] = ApiClient.convertToType(data['words'], ['String']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} title
 */
InlineResponse200.prototype['title'] = undefined;

/**
 * @member {module:model/InlineResponse200Topic} topic
 */
InlineResponse200.prototype['topic'] = undefined;

/**
 * @member {Array.<module:model/InlineResponse200Topic>} contents
 */
InlineResponse200.prototype['contents'] = undefined;

/**
 * @member {Array.<String>} categories
 */
InlineResponse200.prototype['categories'] = undefined;

/**
 * @member {Array.<String>} words
 */
InlineResponse200.prototype['words'] = undefined;

/**
 * @member {String} images
 */
InlineResponse200.prototype['images'] = undefined;

/**
 * @member {String} url
 */
InlineResponse200.prototype['url'] = undefined;






export default InlineResponse200;

